//variables to setup basic size and shape of the card and pips
$card-width: 40vw;
$card-height: $card-width*1.4;
$font-size-number: $card-width * 0.1;
$icon-size: $card-width / 5;
$row-height: ($card-height - $font-size-number)/4;

*,
*:before,
*:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    align-items: center;
    justify-items: center;
}

//styles to draw a basic outline of a card
.card {
    border: 3px solid black;
    height: $card-height;
    width: $card-width;
    border-radius: 10px;
    margin: 20px;
    box-shadow: 2px 2px 4px grey;
}

//because it is a card front we want a bit of extra padding
.card-front {
    padding: ($font-size-number/2);  
    background-color: pink;
}

//set icon size
.icon {
    width: $icon-size;
    height: $icon-size;
}

.number {
    text-align: center;
    font-size: $font-size-number;
  //an icon that is part of a number should be half the normal size
    & > .icon {
        width: $icon-size * .5;
        height: $icon-size *.5;
    }
}
.row{
    display:grid;
    grid-template-rows: $row-height $row-height $row-height $row-height;
    grid-template-columns: 1fr 2fr 2fr 2fr 1fr;
    
}

//rotate bottom pips 180deg
.rotate {
    transform: rotate(180deg);
}
.pip1{ 
   grid-area: 1/2/2/3;
}
.pip2{ 
    grid-area: 1/4/2/5;
 }

 .pip3{ 
    grid-area: 2/3/3/4;
 }
 .pip4{ 
    grid-area: 3/2/4/3;
 }
 .pip5{
    grid-area: 3/4/4/5;
 }
 .pip6{ 
    grid-area: 4/2/5/3;
 }
 .pip7{ 
    grid-area: 4/4/5/5;
 }
 .bottom{
     grid-area: 4/5;
 }
 
 @supports not (display: grid) {
	// All of your flexbox SCSS code here. 
    @import 'grid-layout-partial.scss';

*,
*:before,
*:after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

.card {
  background-color: aqua;

}

.row {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  align-content: space-between;
  height: 100%
}

.cell {
  text-align: center;
}
           
}
 
